name: Build-All-Platforms

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    env:
      NUITKA_ARGS: --follow-imports --standalone --onefile --assume-yes-for-downloads --output-dir="build"

    strategy:
      fail-fast: false
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      # Check-out repository
      - uses: actions/checkout@main

      - name: Setup Python
        uses: actions/setup-python@main
        with:
          python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x86' # optional x64 or x86. Defaults to x64 if not specified

      - name: Install nuitka
        run: pip install -U zstandard nuitka

      - id: set-version
        run: echo "::set-output name=version-opt::$(echo ${{ github.event.release.tag_name }} | sed -r 's/[^0-9]*([0-9.]+)/--windows-company-name="GitHub Actions" --windows-product-version=\1.0 --windows-file-version=\1.0/')"
        shell: bash

      # Build main python script into a stand-alone exe
      - name: Build Executable - main (Windows)
        if: runner.os == 'Windows'
        run: python -m nuitka --python-flag=-u ${{ steps.set-version.outputs.version-opt }} ${{ env.NUITKA_ARGS }} "spcnmh.py"

      # Build setup python script into a stand-alone exe
      - name: Build Executable - setup (Windows)
        if: runner.os == 'Windows'
        run: python -m nuitka --include-data-file="build/*.exe=./" ${{ steps.set-version.outputs.version-opt }} ${{ env.NUITKA_ARGS }} "setup.py"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            build/setup.*
